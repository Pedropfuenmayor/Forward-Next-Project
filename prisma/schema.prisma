generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model actions {
  id              Int      @unique @default(autoincrement())
  what            String   @db.VarChar(300)
  due_date        DateTime @db.Date
  test_until      DateTime @db.Date
  succes_criteria String   @db.VarChar(300)
  idea_id         Int      @id @default(autoincrement())
  ideas           ideas    @relation(fields: [idea_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model challenges {
  id                    Int                    @id @default(autoincrement())
  name                  String                 @db.VarChar(300)
  is_selected           Boolean?
  project_id            Int?
  index                 Int?
  challenge_type        String?                 @db.VarChar(300)
  projects              projects?              @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  ideas                 ideas[]
  opportunity_questions opportunity_questions?
}

model ideas {
  id           Int        @id @default(autoincrement())
  name         String     @db.VarChar(300)
  is_selected  Boolean?
  challenge_id Int        @default(autoincrement())
  index        Int?
  effort       Boolean?
  impact       Boolean?
  challenges   challenges @relation(fields: [challenge_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  actions      actions?
}

model opportunity_questions {
  id           Int        @unique @default(autoincrement())
  name         String     @db.VarChar(300)
  challenge_id Int        @id @default(autoincrement())
  challenges   challenges @relation(fields: [challenge_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model projects {
  id         Int          @id @default(autoincrement())
  name       String       @db.VarChar(300)
  user_id    Int?
  users      users?       @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  challenges challenges[]
}

model users {
  id       Int        @id @default(autoincrement())
  password String     @db.VarChar(300)
  email    String     @db.VarChar(300)
  projects projects[]
}
