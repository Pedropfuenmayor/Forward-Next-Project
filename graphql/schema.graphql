### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Action {
  due_date: Date
  id: Int
  idea_id: Int
  succes_criteria: String
  what: String
}

type Challenge {
  challenge_type: String
  id: Int
  ideas: [Idea]
  index: Int
  is_selected: Boolean
  name: String
  opportunity_question: OQ
  project_id: Int
}

input ChallengeInputType {
  challenge_type: String
  id: Int
  index: Int
  is_selected: Boolean
  name: String
  project_id: Int
}

"""
A date string, such as 2007-12-03, compliant with the `full-date` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar Date

type Idea {
  action: Action
  challenge_id: Int
  effort: Boolean
  id: Int
  impact: Boolean
  index: Int
  is_selected: Boolean
  name: String
}

input IdeaInputType {
  challenge_id: Int
  effort: Boolean
  id: Int
  impact: Boolean
  index: Int
  is_selected: Boolean
  name: String
}

type Mutation {
  createAction(due_date: String!, id: Int!, idea_id: Int!, succes_criteria: String!, what: String!): Action!
  createChallenge(challenge_type: String!, id: Int!, name: String!, project_id: Int!): Challenge!
  createIdea(challenge_id: Int!, id: Int!, name: String!): Idea!
  createOQ(challenge_id: Int!, id: Int!, name: String!): OQ!
  createProject(id: Int!, name: String!, user_id: Int!): Project!
  createUser(email: String!, id: Int!, password: String!): User!
  deleteAction(id: Int!): Action!
  deleteChallenge(id: Int!): Challenge!
  deleteIdea(id: Int!): Idea!
  deleteOQ(id: Int!): OQ!
  deleteUser(email: String!, password: String!): User!
  updateAction(due_date: String!, id: Int!, idea_id: Int!, succes_criteria: String!, what: String!): Action!
  updateChallenges(challenges: [ChallengeInputType!]): [Challenge]!
  updateIdea(effort: Boolean, id: Int!, impact: Boolean, index: Int, is_selected: Boolean, name: String!): Idea!
  updateIdeas(ideas: [IdeaInputType!]): [Idea]!
  updateOQ(id: Int!, name: String!): OQ!
  updateUser(email: String!, newPassword: String!, oldPassword: String!): User!
}

type OQ {
  challenge_id: Int
  id: Int
  name: String
}

type Project {
  challenges: [Challenge]
  id: Int
  name: String
  user_id: Int
}

type Query {
  action: [Action]!
  challenges: [Challenge]!
  getActionByIdeaId(idea_id: Int!): Action!
  getChallengesByProject(project_id: Int!): [Challenge]!
  getIdeasByChallenge(challenge_id: Int!): [Idea]!
  getOQ(challenge_id: Int!): OQ!
  getProjectById(id: Int!): Project
  ideas: [Idea]!
  isProject(userId: Int!): Project
  projects: [Project]!
  users: [User]!
}

type User {
  email: String
  id: Int
  password: String
  projects: [Project]
}
